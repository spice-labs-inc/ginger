name: Publish Rust Container Images

on:
  release:
    types: [published]
  workflow_run:
    workflows: ["Rust Build & Test"]
    types: [completed]
  workflow_dispatch:
    inputs:
      version:
        description: "Version number (e.g., 1.0.0)"
        required: true
        type: string

env:
  GHCR_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERHUB_NAMESPACE: ${{ secrets.DOCKER_USERNAME }}

jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub and GHCR
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'release' ||
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
      github.event_name == 'workflow_dispatch'
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Checkout with LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build project
        run: cargo build --release

      - name: Save binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ginger-${{ github.run_id }}
          path: target/release/ginger

      - name: Declare some variables
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=${{ github.event.inputs.version }}" >> "$GITHUB_ENV"
          else
            echo "version=$(echo $GITHUB_REF | awk -F'/' '{print $3}')" >> "$GITHUB_ENV"
          fi
          echo "short_git_hash=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ env.DOCKERHUB_NAMESPACE }}/${{ github.event.repository.name }}
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=${{ env.version }}

      - name: Build and Push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          provenance: mode=max
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.GHCR_REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Upload binary to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          files: target/release/ginger

  download_artifact:
    name: Download Binary from Build Workflow
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Binary Artifact from Previous Run
        uses: actions/download-artifact@v3
        with:
          name: ginger-${{ github.event.workflow_run.id }}
          path: ./artifacts

      - name: List downloaded files
        run: ls -l ./artifacts
