name: 02. Publish Rust Container Images # ginger

env:
  PLATFORMS: linux/amd64, linux/arm64

on:
  push:
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  workflow_run:
    workflows: ["Rust Build & Test"]
    types: [completed]

jobs:
  check-version:
    if: startsWith(github.ref, 'refs/tags/v')  # Run only on tag pushes
    name: Ensure GitHub Release & Cargo.toml Version Numbers Match
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check Cargo Version Matches Tag
        uses: spice-labs-inc/action-check-version@main

  push_to_registry:
    name: Push Docker Image to Docker Hub and GHCR
    runs-on: ubuntu-24.04
    needs: check-version
    if: github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')

    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
            platforms: ${{env.PLATFORMS}}

      - name: Checkout with LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set Up Rust Toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo Dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build Project
        run: cargo build --release

      - name: Log In to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Log In to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Extract Metadata (Tags, Labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/spice-labs-inc/${{ github.event.repository.name }}
            spicelabs/${{ github.event.repository.name }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: |
            latest=true

      - name: Build and Push Docker Image
        id: push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{env.PLATFORMS}}
          context: .
          push: true
          provenance: mode=max
          sbom: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Save Docker Image Locally
        shell: bash
        run: |
          mkdir -p "${{ github.workspace }}/target/release"
          image_tag=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          echo "Saving $image_tag"
          docker pull "$image_tag"
          docker save "$image_tag" > "${{ github.workspace }}/target/release/${{ github.event.repository.name }}.oci.tar"

      - name: Run Spice Grinder Scan
        uses: spice-labs-inc/action-grinder-scan@main
        with:
          spice_pass: ${{ secrets.GRINDER_JWT }}
          file_path: "${{ github.workspace }}/target/release/"

      - name: Upload Docker Image and SBOM
        uses: actions/upload-artifact@v4
        with:
          name: docker-artifacts
          path: |
            ${{ github.workspace }}/target/release/${{ github.event.repository.name }}.oci.tar
            /tmp/sbom.spdx.json

      - name: Generate Artifact Attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/spice-labs-inc/${{ github.event.repository.name }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
